# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: ref_data.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='ref_data.proto',
  package='algotrader.model.ref_data',
  syntax='proto3',
  serialized_pb=_b('\n\x0eref_data.proto\x12\x19\x61lgotrader.model.ref_data\"\xb8\x05\n\nInstrument\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0e\n\x06symbol\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x11\n\tlong_name\x18\x04 \x01(\t\x12<\n\x04type\x18\x05 \x01(\x0e\x32..algotrader.model.ref_data.Instrument.InstType\x12\x17\n\x0fprimary_exch_id\x18\x06 \x01(\x03\x12\x10\n\x08\x65xch_ids\x18\x07 \x03(\x03\x12\x0e\n\x06\x63\x63y_id\x18\x08 \x01(\x03\x12J\n\x0b\x61lt_symbols\x18\t \x03(\x0b\x32\x35.algotrader.model.ref_data.Instrument.AltSymbolsEntry\x12\x0e\n\x06sector\x18\n \x01(\t\x12\x10\n\x08industry\x18\x0b \x01(\t\x12\x13\n\x0bund_inst_id\x18\x0c \x01(\x03\x12\x10\n\x08\x65xp_date\x18\r \x01(\x03\x12?\n\x08\x63\x61ll_put\x18\x0e \x01(\x0e\x32-.algotrader.model.ref_data.Instrument.CallPut\x12\x0e\n\x06\x66\x61\x63tor\x18\x0f \x01(\x01\x12\x0e\n\x06strike\x18\x10 \x01(\x01\x12\x0e\n\x06margin\x18\x11 \x01(\x01\x12\x11\n\ttick_size\x18\x12 \x01(\x01\x12\x18\n\x10trading_hours_id\x18\x13 \x01(\x03\x12\x1b\n\x13trading_holidays_id\x18\x14 \x01(\x03\x1a\x31\n\x0f\x41ltSymbolsEntry\x12\x0b\n\x03key\x18\x01 \x01(\x03\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x1c\n\x07\x43\x61llPut\x12\x08\n\x04\x43\x61ll\x10\x00\x12\x07\n\x03Put\x10\x01\"S\n\x08InstType\x12\x07\n\x03STK\x10\x00\x12\x07\n\x03\x46UT\x10\x01\x12\x07\n\x03OPT\x10\x02\x12\x07\n\x03\x46OT\x10\x03\x12\x07\n\x03IDX\x10\x04\x12\x08\n\x04\x43\x41SH\x10\x05\x12\x07\n\x03\x45TF\x10\x06\x12\x07\n\x03\x43\x42O\x10\x07\"\xf4\x01\n\x08\x45xchange\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x12\n\ncountry_id\x18\x04 \x01(\x03\x12\x44\n\talt_codes\x18\x05 \x03(\x0b\x32\x31.algotrader.model.ref_data.Exchange.AltCodesEntry\x12\x18\n\x10trading_hours_id\x18\x06 \x01(\x03\x12\x1b\n\x13trading_holidays_id\x18\x07 \x01(\x03\x1a/\n\rAltCodesEntry\x12\x0b\n\x03key\x18\x01 \x01(\x03\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"1\n\x07\x43ountry\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\"\xa9\x01\n\x08\x43urrency\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04\x63ode\x18\x02 \x01(\t\x12\x0c\n\x04name\x18\x03 \x01(\t\x12\x44\n\talt_codes\x18\x04 \x03(\x0b\x32\x31.algotrader.model.ref_data.Currency.AltCodesEntry\x1a/\n\rAltCodesEntry\x12\x0b\n\x03key\x18\x01 \x01(\x03\x12\r\n\x05value\x18\x02 \x01(\t:\x02\x38\x01\"\x80\x03\n\x0fTradingHolidays\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x44\n\x08holidays\x18\x03 \x03(\x0b\x32\x32.algotrader.model.ref_data.TradingHolidays.Holiday\x1a\x8c\x02\n\x07Holiday\x12\x14\n\x0ctrading_date\x18\x01 \x01(\x03\x12\x12\n\nstart_date\x18\x02 \x01(\x03\x12\x12\n\nstart_time\x18\x03 \x01(\x03\x12\x10\n\x08\x65nd_date\x18\x04 \x01(\x03\x12\x10\n\x08\x65nd_time\x18\x05 \x01(\x03\x12\x45\n\x04type\x18\x06 \x01(\x0e\x32\x37.algotrader.model.ref_data.TradingHolidays.Holiday.Type\x12\x0c\n\x04\x64\x65sc\x18\x07 \x01(\t\"J\n\x04Type\x12\x0b\n\x07\x46ullDay\x10\x00\x12\x0c\n\x08LateOpen\x10\x01\x12\x0e\n\nEarlyClose\x10\x02\x12\x0b\n\x07Replace\x10\x03\x12\n\n\x06Modify\x10\x04\"\xc3\x03\n\x0cTradingHours\x12\n\n\x02id\x18\x01 \x01(\x03\x12\x0c\n\x04name\x18\x02 \x01(\t\x12\x10\n\x08timezone\x18\x03 \x01(\t\x12\x41\n\x08sessions\x18\x04 \x03(\x0b\x32/.algotrader.model.ref_data.TradingHours.Session\x1a\xc3\x02\n\x07Session\x12O\n\x0estart_weekdate\x18\x01 \x01(\x0e\x32\x37.algotrader.model.ref_data.TradingHours.Session.WeekDay\x12\x12\n\nstart_time\x18\x02 \x01(\x03\x12M\n\x0c\x65nd_weekdate\x18\x03 \x01(\x0e\x32\x37.algotrader.model.ref_data.TradingHours.Session.WeekDay\x12\x10\n\x08\x65nd_time\x18\x04 \x01(\x03\x12\x0b\n\x03\x65od\x18\x05 \x01(\x08\"e\n\x07WeekDay\x12\n\n\x06Sunday\x10\x00\x12\n\n\x06Monday\x10\x01\x12\x0b\n\x07Tuesday\x10\x02\x12\r\n\tWednesday\x10\x03\x12\x0c\n\x08Thursday\x10\x04\x12\n\n\x06\x46riday\x10\x05\x12\x0c\n\x08Saturday\x10\x06\x62\x06proto3')
)
_sym_db.RegisterFileDescriptor(DESCRIPTOR)



_INSTRUMENT_CALLPUT = _descriptor.EnumDescriptor(
  name='CallPut',
  full_name='algotrader.model.ref_data.Instrument.CallPut',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Call', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Put', index=1, number=1,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=629,
  serialized_end=657,
)
_sym_db.RegisterEnumDescriptor(_INSTRUMENT_CALLPUT)

_INSTRUMENT_INSTTYPE = _descriptor.EnumDescriptor(
  name='InstType',
  full_name='algotrader.model.ref_data.Instrument.InstType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='STK', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FUT', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='OPT', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FOT', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IDX', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CASH', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ETF', index=6, number=6,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='CBO', index=7, number=7,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=659,
  serialized_end=742,
)
_sym_db.RegisterEnumDescriptor(_INSTRUMENT_INSTTYPE)

_TRADINGHOLIDAYS_HOLIDAY_TYPE = _descriptor.EnumDescriptor(
  name='Type',
  full_name='algotrader.model.ref_data.TradingHolidays.Holiday.Type',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FullDay', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='LateOpen', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EarlyClose', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Replace', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Modify', index=4, number=4,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1525,
  serialized_end=1599,
)
_sym_db.RegisterEnumDescriptor(_TRADINGHOLIDAYS_HOLIDAY_TYPE)

_TRADINGHOURS_SESSION_WEEKDAY = _descriptor.EnumDescriptor(
  name='WeekDay',
  full_name='algotrader.model.ref_data.TradingHours.Session.WeekDay',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='Sunday', index=0, number=0,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Monday', index=1, number=1,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Tuesday', index=2, number=2,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Wednesday', index=3, number=3,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Thursday', index=4, number=4,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Friday', index=5, number=5,
      options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Saturday', index=6, number=6,
      options=None,
      type=None),
  ],
  containing_type=None,
  options=None,
  serialized_start=1952,
  serialized_end=2053,
)
_sym_db.RegisterEnumDescriptor(_TRADINGHOURS_SESSION_WEEKDAY)


_INSTRUMENT_ALTSYMBOLSENTRY = _descriptor.Descriptor(
  name='AltSymbolsEntry',
  full_name='algotrader.model.ref_data.Instrument.AltSymbolsEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='algotrader.model.ref_data.Instrument.AltSymbolsEntry.key', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='algotrader.model.ref_data.Instrument.AltSymbolsEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=578,
  serialized_end=627,
)

_INSTRUMENT = _descriptor.Descriptor(
  name='Instrument',
  full_name='algotrader.model.ref_data.Instrument',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='algotrader.model.ref_data.Instrument.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='symbol', full_name='algotrader.model.ref_data.Instrument.symbol', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='algotrader.model.ref_data.Instrument.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='long_name', full_name='algotrader.model.ref_data.Instrument.long_name', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='algotrader.model.ref_data.Instrument.type', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='primary_exch_id', full_name='algotrader.model.ref_data.Instrument.primary_exch_id', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exch_ids', full_name='algotrader.model.ref_data.Instrument.exch_ids', index=6,
      number=7, type=3, cpp_type=2, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='ccy_id', full_name='algotrader.model.ref_data.Instrument.ccy_id', index=7,
      number=8, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='alt_symbols', full_name='algotrader.model.ref_data.Instrument.alt_symbols', index=8,
      number=9, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sector', full_name='algotrader.model.ref_data.Instrument.sector', index=9,
      number=10, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='industry', full_name='algotrader.model.ref_data.Instrument.industry', index=10,
      number=11, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='und_inst_id', full_name='algotrader.model.ref_data.Instrument.und_inst_id', index=11,
      number=12, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='exp_date', full_name='algotrader.model.ref_data.Instrument.exp_date', index=12,
      number=13, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='call_put', full_name='algotrader.model.ref_data.Instrument.call_put', index=13,
      number=14, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='factor', full_name='algotrader.model.ref_data.Instrument.factor', index=14,
      number=15, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='strike', full_name='algotrader.model.ref_data.Instrument.strike', index=15,
      number=16, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='margin', full_name='algotrader.model.ref_data.Instrument.margin', index=16,
      number=17, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='tick_size', full_name='algotrader.model.ref_data.Instrument.tick_size', index=17,
      number=18, type=1, cpp_type=5, label=1,
      has_default_value=False, default_value=float(0),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='trading_hours_id', full_name='algotrader.model.ref_data.Instrument.trading_hours_id', index=18,
      number=19, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='trading_holidays_id', full_name='algotrader.model.ref_data.Instrument.trading_holidays_id', index=19,
      number=20, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_INSTRUMENT_ALTSYMBOLSENTRY, ],
  enum_types=[
    _INSTRUMENT_CALLPUT,
    _INSTRUMENT_INSTTYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=46,
  serialized_end=742,
)


_EXCHANGE_ALTCODESENTRY = _descriptor.Descriptor(
  name='AltCodesEntry',
  full_name='algotrader.model.ref_data.Exchange.AltCodesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='algotrader.model.ref_data.Exchange.AltCodesEntry.key', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='algotrader.model.ref_data.Exchange.AltCodesEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=942,
  serialized_end=989,
)

_EXCHANGE = _descriptor.Descriptor(
  name='Exchange',
  full_name='algotrader.model.ref_data.Exchange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='algotrader.model.ref_data.Exchange.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='code', full_name='algotrader.model.ref_data.Exchange.code', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='algotrader.model.ref_data.Exchange.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='country_id', full_name='algotrader.model.ref_data.Exchange.country_id', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='alt_codes', full_name='algotrader.model.ref_data.Exchange.alt_codes', index=4,
      number=5, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='trading_hours_id', full_name='algotrader.model.ref_data.Exchange.trading_hours_id', index=5,
      number=6, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='trading_holidays_id', full_name='algotrader.model.ref_data.Exchange.trading_holidays_id', index=6,
      number=7, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_EXCHANGE_ALTCODESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=745,
  serialized_end=989,
)


_COUNTRY = _descriptor.Descriptor(
  name='Country',
  full_name='algotrader.model.ref_data.Country',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='algotrader.model.ref_data.Country.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='code', full_name='algotrader.model.ref_data.Country.code', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='algotrader.model.ref_data.Country.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=991,
  serialized_end=1040,
)


_CURRENCY_ALTCODESENTRY = _descriptor.Descriptor(
  name='AltCodesEntry',
  full_name='algotrader.model.ref_data.Currency.AltCodesEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='algotrader.model.ref_data.Currency.AltCodesEntry.key', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='value', full_name='algotrader.model.ref_data.Currency.AltCodesEntry.value', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=_descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001')),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=942,
  serialized_end=989,
)

_CURRENCY = _descriptor.Descriptor(
  name='Currency',
  full_name='algotrader.model.ref_data.Currency',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='algotrader.model.ref_data.Currency.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='code', full_name='algotrader.model.ref_data.Currency.code', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='algotrader.model.ref_data.Currency.name', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='alt_codes', full_name='algotrader.model.ref_data.Currency.alt_codes', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CURRENCY_ALTCODESENTRY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1043,
  serialized_end=1212,
)


_TRADINGHOLIDAYS_HOLIDAY = _descriptor.Descriptor(
  name='Holiday',
  full_name='algotrader.model.ref_data.TradingHolidays.Holiday',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='trading_date', full_name='algotrader.model.ref_data.TradingHolidays.Holiday.trading_date', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_date', full_name='algotrader.model.ref_data.TradingHolidays.Holiday.start_date', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_time', full_name='algotrader.model.ref_data.TradingHolidays.Holiday.start_time', index=2,
      number=3, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_date', full_name='algotrader.model.ref_data.TradingHolidays.Holiday.end_date', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='algotrader.model.ref_data.TradingHolidays.Holiday.end_time', index=4,
      number=5, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='type', full_name='algotrader.model.ref_data.TradingHolidays.Holiday.type', index=5,
      number=6, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='desc', full_name='algotrader.model.ref_data.TradingHolidays.Holiday.desc', index=6,
      number=7, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _TRADINGHOLIDAYS_HOLIDAY_TYPE,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1331,
  serialized_end=1599,
)

_TRADINGHOLIDAYS = _descriptor.Descriptor(
  name='TradingHolidays',
  full_name='algotrader.model.ref_data.TradingHolidays',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='algotrader.model.ref_data.TradingHolidays.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='algotrader.model.ref_data.TradingHolidays.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='holidays', full_name='algotrader.model.ref_data.TradingHolidays.holidays', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_TRADINGHOLIDAYS_HOLIDAY, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1215,
  serialized_end=1599,
)


_TRADINGHOURS_SESSION = _descriptor.Descriptor(
  name='Session',
  full_name='algotrader.model.ref_data.TradingHours.Session',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start_weekdate', full_name='algotrader.model.ref_data.TradingHours.Session.start_weekdate', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='start_time', full_name='algotrader.model.ref_data.TradingHours.Session.start_time', index=1,
      number=2, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_weekdate', full_name='algotrader.model.ref_data.TradingHours.Session.end_weekdate', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='end_time', full_name='algotrader.model.ref_data.TradingHours.Session.end_time', index=3,
      number=4, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='eod', full_name='algotrader.model.ref_data.TradingHours.Session.eod', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _TRADINGHOURS_SESSION_WEEKDAY,
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1730,
  serialized_end=2053,
)

_TRADINGHOURS = _descriptor.Descriptor(
  name='TradingHours',
  full_name='algotrader.model.ref_data.TradingHours',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='id', full_name='algotrader.model.ref_data.TradingHours.id', index=0,
      number=1, type=3, cpp_type=2, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='name', full_name='algotrader.model.ref_data.TradingHours.name', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='timezone', full_name='algotrader.model.ref_data.TradingHours.timezone', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='sessions', full_name='algotrader.model.ref_data.TradingHours.sessions', index=3,
      number=4, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_TRADINGHOURS_SESSION, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1602,
  serialized_end=2053,
)

_INSTRUMENT_ALTSYMBOLSENTRY.containing_type = _INSTRUMENT
_INSTRUMENT.fields_by_name['type'].enum_type = _INSTRUMENT_INSTTYPE
_INSTRUMENT.fields_by_name['alt_symbols'].message_type = _INSTRUMENT_ALTSYMBOLSENTRY
_INSTRUMENT.fields_by_name['call_put'].enum_type = _INSTRUMENT_CALLPUT
_INSTRUMENT_CALLPUT.containing_type = _INSTRUMENT
_INSTRUMENT_INSTTYPE.containing_type = _INSTRUMENT
_EXCHANGE_ALTCODESENTRY.containing_type = _EXCHANGE
_EXCHANGE.fields_by_name['alt_codes'].message_type = _EXCHANGE_ALTCODESENTRY
_CURRENCY_ALTCODESENTRY.containing_type = _CURRENCY
_CURRENCY.fields_by_name['alt_codes'].message_type = _CURRENCY_ALTCODESENTRY
_TRADINGHOLIDAYS_HOLIDAY.fields_by_name['type'].enum_type = _TRADINGHOLIDAYS_HOLIDAY_TYPE
_TRADINGHOLIDAYS_HOLIDAY.containing_type = _TRADINGHOLIDAYS
_TRADINGHOLIDAYS_HOLIDAY_TYPE.containing_type = _TRADINGHOLIDAYS_HOLIDAY
_TRADINGHOLIDAYS.fields_by_name['holidays'].message_type = _TRADINGHOLIDAYS_HOLIDAY
_TRADINGHOURS_SESSION.fields_by_name['start_weekdate'].enum_type = _TRADINGHOURS_SESSION_WEEKDAY
_TRADINGHOURS_SESSION.fields_by_name['end_weekdate'].enum_type = _TRADINGHOURS_SESSION_WEEKDAY
_TRADINGHOURS_SESSION.containing_type = _TRADINGHOURS
_TRADINGHOURS_SESSION_WEEKDAY.containing_type = _TRADINGHOURS_SESSION
_TRADINGHOURS.fields_by_name['sessions'].message_type = _TRADINGHOURS_SESSION
DESCRIPTOR.message_types_by_name['Instrument'] = _INSTRUMENT
DESCRIPTOR.message_types_by_name['Exchange'] = _EXCHANGE
DESCRIPTOR.message_types_by_name['Country'] = _COUNTRY
DESCRIPTOR.message_types_by_name['Currency'] = _CURRENCY
DESCRIPTOR.message_types_by_name['TradingHolidays'] = _TRADINGHOLIDAYS
DESCRIPTOR.message_types_by_name['TradingHours'] = _TRADINGHOURS

Instrument = _reflection.GeneratedProtocolMessageType('Instrument', (_message.Message,), dict(

  AltSymbolsEntry = _reflection.GeneratedProtocolMessageType('AltSymbolsEntry', (_message.Message,), dict(
    DESCRIPTOR = _INSTRUMENT_ALTSYMBOLSENTRY,
    __module__ = 'ref_data_pb2'
    # @@protoc_insertion_point(class_scope:algotrader.model.ref_data.Instrument.AltSymbolsEntry)
    ))
  ,
  DESCRIPTOR = _INSTRUMENT,
  __module__ = 'ref_data_pb2'
  # @@protoc_insertion_point(class_scope:algotrader.model.ref_data.Instrument)
  ))
_sym_db.RegisterMessage(Instrument)
_sym_db.RegisterMessage(Instrument.AltSymbolsEntry)

Exchange = _reflection.GeneratedProtocolMessageType('Exchange', (_message.Message,), dict(

  AltCodesEntry = _reflection.GeneratedProtocolMessageType('AltCodesEntry', (_message.Message,), dict(
    DESCRIPTOR = _EXCHANGE_ALTCODESENTRY,
    __module__ = 'ref_data_pb2'
    # @@protoc_insertion_point(class_scope:algotrader.model.ref_data.Exchange.AltCodesEntry)
    ))
  ,
  DESCRIPTOR = _EXCHANGE,
  __module__ = 'ref_data_pb2'
  # @@protoc_insertion_point(class_scope:algotrader.model.ref_data.Exchange)
  ))
_sym_db.RegisterMessage(Exchange)
_sym_db.RegisterMessage(Exchange.AltCodesEntry)

Country = _reflection.GeneratedProtocolMessageType('Country', (_message.Message,), dict(
  DESCRIPTOR = _COUNTRY,
  __module__ = 'ref_data_pb2'
  # @@protoc_insertion_point(class_scope:algotrader.model.ref_data.Country)
  ))
_sym_db.RegisterMessage(Country)

Currency = _reflection.GeneratedProtocolMessageType('Currency', (_message.Message,), dict(

  AltCodesEntry = _reflection.GeneratedProtocolMessageType('AltCodesEntry', (_message.Message,), dict(
    DESCRIPTOR = _CURRENCY_ALTCODESENTRY,
    __module__ = 'ref_data_pb2'
    # @@protoc_insertion_point(class_scope:algotrader.model.ref_data.Currency.AltCodesEntry)
    ))
  ,
  DESCRIPTOR = _CURRENCY,
  __module__ = 'ref_data_pb2'
  # @@protoc_insertion_point(class_scope:algotrader.model.ref_data.Currency)
  ))
_sym_db.RegisterMessage(Currency)
_sym_db.RegisterMessage(Currency.AltCodesEntry)

TradingHolidays = _reflection.GeneratedProtocolMessageType('TradingHolidays', (_message.Message,), dict(

  Holiday = _reflection.GeneratedProtocolMessageType('Holiday', (_message.Message,), dict(
    DESCRIPTOR = _TRADINGHOLIDAYS_HOLIDAY,
    __module__ = 'ref_data_pb2'
    # @@protoc_insertion_point(class_scope:algotrader.model.ref_data.TradingHolidays.Holiday)
    ))
  ,
  DESCRIPTOR = _TRADINGHOLIDAYS,
  __module__ = 'ref_data_pb2'
  # @@protoc_insertion_point(class_scope:algotrader.model.ref_data.TradingHolidays)
  ))
_sym_db.RegisterMessage(TradingHolidays)
_sym_db.RegisterMessage(TradingHolidays.Holiday)

TradingHours = _reflection.GeneratedProtocolMessageType('TradingHours', (_message.Message,), dict(

  Session = _reflection.GeneratedProtocolMessageType('Session', (_message.Message,), dict(
    DESCRIPTOR = _TRADINGHOURS_SESSION,
    __module__ = 'ref_data_pb2'
    # @@protoc_insertion_point(class_scope:algotrader.model.ref_data.TradingHours.Session)
    ))
  ,
  DESCRIPTOR = _TRADINGHOURS,
  __module__ = 'ref_data_pb2'
  # @@protoc_insertion_point(class_scope:algotrader.model.ref_data.TradingHours)
  ))
_sym_db.RegisterMessage(TradingHours)
_sym_db.RegisterMessage(TradingHours.Session)


_INSTRUMENT_ALTSYMBOLSENTRY.has_options = True
_INSTRUMENT_ALTSYMBOLSENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_EXCHANGE_ALTCODESENTRY.has_options = True
_EXCHANGE_ALTCODESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
_CURRENCY_ALTCODESENTRY.has_options = True
_CURRENCY_ALTCODESENTRY._options = _descriptor._ParseOptions(descriptor_pb2.MessageOptions(), _b('8\001'))
# @@protoc_insertion_point(module_scope)
