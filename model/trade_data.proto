syntax = "proto3";
import "google/protobuf/any.proto";
import "market_data.proto";

package algotrader.model.trade_data;


enum OrderAcion {
    Buy = 0;
    Sell = 1;
    //SellShort = 2;
}

enum OrderType {
    Market = 0;
    Limit = 1;
    Stop = 2;
    StopLimit = 3;
    TrailingStop = 4;
    MarketOnClose = 5;
    LimitOnClose = 6;
    MarketToLimit = 7;
    MarketIfPriceTouched = 8;
    MarketOnOpen = 9;
}

enum TIF {
    DAY = 0;
    GTC = 1;
    FOK = 2;
    GTD = 3;
}

enum OrderStatus {
    UnknownStatus = 0;
    New = 1;
    PendingSubmit = 2;
    Submitted = 3;
    PendingCancel = 4;
    Cancelled = 5;
    PendingReplace = 6;
    Replaced = 7;
    PartiallyFilled = 8;
    Filled = 9;
    Rejected = 10;
}

message NewOrderRequest {
    int64 timestamp = 1;

    string cl_id = 2;
    string cl_ord_id = 3;
    string portf_id = 4;
    string broker_id = 5;
    string inst_id = 6;

    OrderAcion action = 10;
    OrderType type = 11;
    double qty = 12;
    double limit_price = 13;
    double stop_price = 14;
    TIF tif = 15;

    string oca_tag = 20;
    map<string, google.protobuf.Any> params = 21;
}


message OrderReplaceRequest {
    int64 timestamp = 1;

    string cl_id = 2;
    string cl_ord_id = 3;

    OrderType type = 10;
    double qty = 11;
    double limit_price = 12;
    double stop_price = 13;
    TIF tif = 14;

    string oca_tag = 20;
    map<string, google.protobuf.Any> params = 21;

}

message OrderCancelRequest {
    int64 timestamp = 1;
    string cl_id = 2;
    string cl_ord_id = 3;

    map<string, google.protobuf.Any> params = 10;

}

message OrderStatusUpdate {
    string event_id = 1;
    string broker_id = 2;
    string ord_id = 3;
    string cl_id = 4;
    string cl_ord_id = 5;
    string inst_id = 6;
    double filled_qty = 7;
    double avg_price = 8;
    OrderStatus status = 9;
}


message ExecutionReport {
    string event_id = 1;
    string broker_id = 2;
    string er_id = 3;

    string ord_id = 4;
    string cl_id = 5;
    string cl_ord_id = 6;
    string inst_id = 7;

    double last_qty = 10;
    double last_price = 11;
    double commission = 12;
    double filled_qty = 13;
    double avg_oprice = 14;
    OrderStatus status = 15;
}


message AccountUpdate {
    string event_id = 1;
    string account_name = 2;
    string key = 3;
    string ccy_id = 4;
    double value = 5;

}

message PortfolioUpdate {
    string event_id = 1;
    string port_id = 2;
    string inst_id = 3;
    double position = 4;
    double mkt_price = 5;
    double mkt_value = 6;
    double avg_cost = 7;
    double unrealized_pnl = 8;
    double realized_pnl = 9;
}


message Amount {
    string ccy_id = 1;
    double value = 2;
}

message Account {
    string acct_id = 1;
    map<string, Amount> values = 2;
    map<string, Position> positions = 3;
}

message Portfolio {
    string port_id = 1;
    map<string, Position> positions = 2;

    DataSeries performance = 5;
    double total_equity = 6;
    double cash = 7;
    double stock_value = 8;
    Pnl pnl = 9;
    DrawDown drawDown = 10;
}

message Pnl {
    double pnl = 1;
    DataSeries pnl_series = 2;
}

message DrawDown {
    double drawdown = 1;
    double drawdown_pct = 2;
    double high_equity = 3;
    double low_equity = 4;
    double current_run_up = 5;
    double current_drawdown = 6;
    DataSeries drawdown_series = 7;
}


message Config {
    string config_id = 1;
    map<string, string> values = 2;
}

message Strategy {
    string stg_id = 1;
    string config_id = 2;
    map<string, Position> positions = 3;
}


message Order {
    int64 timestamp = 1;

    string cl_id = 2;
    string cl_ord_id = 3;
    string portf_id = 4;
    string broker_id = 5;
    string inst_id = 6;

    OrderAcion action = 10;
    OrderType type = 11;
    double qty = 12;
    double limit_price = 13;
    double stop_price = 14;
    TIF tif = 15;

    string oca_tag = 20;
    map<string, google.protobuf.Any> params = 21;

    OrderStatus status = 30;
    double filled_qty = 31;
    double avg_price = 32;
    double last_qty = 33;
    double last_price = 34;
    bool stop_limit_ready = 35;
    double trailing_stop_exec_price = 36;
}


message ClientOrder {
    map<string, Order> orders = 1;
}

message Position {
    string inst_id = 1;
    map<string, ClientOrder> cl_orders = 2;
    double last_price = 3;
    double total_qty = 4;

}
