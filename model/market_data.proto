syntax = "proto3";

package algotrader.model.market_data;

message Bar{
    enum Type{
        Time = 0;
        Tick = 1;
        Volume = 2;
        Dynamic = 3;
    }

    int64 inst_id = 1;
    Type type = 2;
    int32 size = 3;
    int32 provider_id = 4;
    int64 timestamp = 5;
    int64 begin_time = 6;
    double open = 7;
    double high = 8;
    double low = 9;
    double close = 10;
    double vol = 11;
    double adj_close = 12;
}

message Quote{
    int64 inst_id = 1;
    int32 provider_id = 2;
    int64 timestamp = 3;
    double bid = 4;
    int64 bid_size = 5;
    double ask = 6;
    int64 ask_size = 7;
}

message Trade{
    int64 inst_id = 1;
    int32 provider_id = 2;
    int64 timestamp = 3;
    double price = 4;
    int64 size = 5;
}

message MarketDepth{
    enum Side {
        Ask = 0;
        bid = 1;
    }

    enum Operation {
        Insert = 0;
        Update = 1;
        Delete = 2;
    }

    int64 inst_id = 1;
    int32 provider_id = 2;
    int64 timestamp = 3;
    string provider = 4;
    int64 position = 5;
    Operation operation = 6;
    Side side = 7;
    double price = 8;
    int64 size = 9;
}


message DataSeriesItem{
    map<string, double> data = 1;
}

message DataSeries{
    int64 id = 1;
    string name = 2;
    string desc = 3;
    double missing_value_replace = 4;
    repeated string keys = 5;
    int64 start_time = 6;
    int64 end_time = 7;
    map<int64, DataSeriesItem> items = 8;
}

