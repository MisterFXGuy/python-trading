syntax = "proto3";

package algotrader.model.ref_data;

message Instrument {

    enum InstType {
        STK = 0;
        FUT = 1;
        OPT = 2;
        FOT = 3;
        IDX = 4;
        CASH = 5;
        ETF = 6;
        CBO = 7;
    }

    enum Idtype{
        CUSIP = 0;
        ISIN = 1;
        SEDOL = 2;
        RIC = 3;
        BBG = 4;
        VALOREN = 5;
        WKN = 6;
        CINS = 7;
    }

    enum OptionType{
        Call = 0;
        Put = 1;
    }

    enum OptionStyle {
        European = 0;
        American = 1;
    }


    message Underlying{
        int64 inst_id = 1;
        double weight = 2;

    }

    int64 id = 1;
    string symbol = 2;
    string name = 3;
    string long_name = 4;
    InstType type = 5;
    int64 primary_exch_id = 6;
    repeated int64 exch_ids = 7;
    int64 ccy_id = 8;
    string sector = 9;
    string industry = 10;
    double margin = 11;
    double tick_size = 12;

    //derivatives
    repeated Underlying underlyings = 21;  //TODO basket, index, ETF.. multiple und relationship
    OptionType option_type=22;
    OptionStyle option_style =23;
    double strike = 24;
    int64 exp_date = 25;
    double multiplier = 26;

    //trading hours override
    int64 trading_hours_id = 30;
    int64 trading_holidays_id = 31;

    //alt sym / ids
    map<int64, string> alt_symbols = 41;  //map<provider_id, alt_symbol>, e.g. IB -> 5
    map<int64, string> alt_ids = 42;      //e.g. RIC -> 0005.HK
    map<int64, string> alt_sectors = 43;
    map<int64, string> alt_industries = 44;
}

message Exchange {
    int64 id = 1;
    string code = 2;
    string name = 3;
    int64 country_id = 4;
    int64 trading_hours_id = 5;
    int64 trading_holidays_id = 6;

    map<int64, string> alt_codes = 7;
}

message Country {
    int64 id = 1;
    string code = 2;
    string name = 3;
}

message Currency {
    int64 id = 1;
    string code = 2;
    string name = 3;

    map<int64, string> alt_codes = 4;
}


message TradingHolidays{
    message Holiday{
        int64 trading_date = 1;
        int64 start_date = 2;
        int64 start_time = 3;
        int64 end_date = 4;
        int64 end_time = 5;
        Type type = 6;
        string desc = 7;

        enum Type{
            FullDay = 0;
            LateOpen = 1;
            EarlyClose = 2;
            Replace = 3;
            Modify = 4;
        }
    }

    int64 id = 1;
    string name = 2;
    repeated Holiday holidays=3;
}

message TradingHours{
    message Session{
        WeekDay start_weekdate = 1;
        int64 start_time = 2;
        WeekDay end_weekdate = 3;
        int64 end_time = 4;
        bool eod = 5;


        enum WeekDay{
            Sunday = 0;
            Monday = 1;
            Tuesday = 2;
            Wednesday = 3;
            Thursday = 4;
            Friday = 5;
            Saturday = 6;
        }
    }

    int64 id = 1;
    string name = 2;
    string timezone = 3;
    repeated Session sessions = 4;
}
